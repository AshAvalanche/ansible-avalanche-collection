---
- name: Get P chain address
  uri:
    url: "http://{{ avalanchego_http_host }}:{{ avalanchego_http_port }}/ext/bc/P"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: platform.listAddresses
      params:
        username: "{{ avalanche_node_username }}"
        password: "{{ avalanche_node_password }}"
      id: 1
  register: list_addresses_res
  failed_when: list_addresses_res.json.error is defined or list_addresses_res.json.result.addresses | length < 1

- name: Get NodeID
  uri:
    url: "http://{{ avalanchego_http_host }}:{{ avalanchego_http_port }}/ext/info"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: info.getNodeID
      id: 1
  register: get_node_id_res
  failed_when: get_node_id_res.json.error is defined

- name: Check if node is already a P chain validator
  uri:
    url: "http://{{ avalanchego_http_host }}:{{ avalanchego_http_port }}/ext/bc/P"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: platform.getCurrentValidators
      params:
        nodeIDs: ["{{ get_node_id_res.json.result.nodeID }}"]
      id: 1
  register: get_current_validators_res
  failed_when: get_current_validators_res.json.error is defined

- name: Add validator if not already validating
  ash.avalanche.tx:
    http_host: "{{ avalanchego_http_host }}"
    http_port: "{{ avalanchego_http_port }}"
    blockchain: P
    method: platform.addValidator
    username: "{{ avalanche_node_username }}"
    password: "{{ avalanche_node_password }}"
    params:
      nodeID: "{{ get_node_id_res.json.result.nodeID }}"
      startTime: "{{ avalanchego_validation_start_time }}"
      endTime: "{{ avalanchego_validation_end_time }}"
      stakeAmount: "{{ avalanchego_validation_stake_amount }}"
      rewardAddress: "{{ list_addresses_res.json.result.addresses[0] }}"
      delegationFeeRate: 10
      username: "{{ avalanche_node_username }}"
      password: "{{ avalanche_node_password }}"
    wait_validation: yes
  when: get_current_validators_res.json.result.validators | length  < 1
