# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) 2022-2024, E36 Knots
---
# Avalanchego version
avalanchego_version: 1.10.0

# Install directories
avalanchego_install_dir: /opt/avalanche/avalanchego
avalanchego_vms_dir: /opt/avalanche/vms

# DB directory
avalanchego_db_dir: /var/lib/avalanche/avalanchego/db

# Configuration directories
avalanchego_conf_dir: /etc/avalanche/avalanchego/conf
avalanchego_staking_dir: /etc/avalanche/avalanchego/staking
avalanchego_https_certs_dir: /etc/ssl/certs/avalanche/avalanchego
avalanchego_gpg_dir: /etc/avalanche/avalanchego/gnupg

# Log directory
avalanchego_log_dir: /var/log/avalanche/avalanchego

# User and group
avalanchego_user: avalanche
avalanchego_group: avalanche

# Auto-restart
## The restart is triggered by any version or configuration change
avalanchego_auto_restart: true

# HTTP
## Change this to public IP to accept API calls from the outside
avalanchego_http_host: 127.0.0.1
avalanchego_http_port: 9650
avalanchego_http_allowed_hosts: "localhost"
## If set to `true`, will use existing certificates found in `avalanchego_https_local_certs_dir`
avalanchego_https_enabled: false
## If set to `""`, no file will be uploaded. Certificates are expected to be present on the target host.
avalanchego_https_local_certs_dir: "{{ playbook_dir }}/files/https"
avalanchego_https_cert_file: "{{ avalanchego_https_certs_dir }}/{{ inventory_hostname }}.crt"
avalanchego_https_key_file: "{{ avalanchego_https_certs_dir }}/{{ inventory_hostname }}.key"

# Public IP
## Set to "" to resolve the public IP automatically using NAT traversal
avalanchego_public_ip: "{{ ansible_host }}"

# Staking
avalanchego_staking_port: 9651
## If set to `true`, will use existing certificates found in `avalanchego_staking_local_certs_dir`
avalanchego_staking_use_local_certs: false
avalanchego_staking_local_certs_dir: "{{ playbook_dir }}/files/staking"
## If set to `true`, will use existing BLS keys found in `avalanchego_staking_local_bls_keys_dir`
avalanchego_staking_use_local_bls_keys: false
avalanchego_staking_local_bls_keys_dir: "{{ playbook_dir }}/files/staking"

# Genesis
## If set to `true`, will use existing genesis file at `avalanchego_custom_genesis_local_file`
avalanchego_custom_genesis: false
avalanchego_custom_genesis_local_file: "{{ playbook_dir }}/files/genesis.json"

# Bootstrapping
avalanchego_network_id: fuji
## Node IDs of the bootstrap nodes on networks other than `mainnet`, `testnet` and `fuji`
avalanchego_bootstrap_node_ids:
  - NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg
avalanchego_bootstrap_db: ""

# Subnets
avalanchego_track_subnets: []

# VMs
avalanchego_vms_install: {}
## Example
##  subnet-evm: 0.4.10
##  timestampvm: 1.3.0
##  spacesvm: 0.0.15

# node.json
avalanchego_node_json:
  # Public IP
  public-ip: "{{ avalanchego_public_ip }}"
  # HTTP
  http-host: "{{ avalanchego_http_host }}"
  http-port: "{{ avalanchego_http_port }}"
  http-tls-enabled: "{{ avalanchego_https_enabled }}"
  http-allowed-hosts: "{{ avalanchego_http_allowed_hosts }}"
  # Staking
  staking-port: "{{ avalanchego_staking_port }}"
  # Consensus
  network-id: "{{ avalanchego_network_id }}"
  # Paths
  db-dir: "{{ avalanchego_db_dir }}"
  subnet-config-dir: "{{ avalanchego_subnets_conf_dir }}"
  chain-config-dir: "{{ avalanchego_chains_conf_dir }}"
  chain-aliases-file: "{{ avalanchego_chains_conf_dir }}/aliases.json"
  log-dir: "{{ avalanchego_log_dir }}"
  # Logging
  log-level: info
  # Subnets
  track-subnets: "{{ avalanchego_track_subnets | join(',') }}"

# Subnets configurations
avalanchego_subnets_configs: {}

# Chains configurations
avalanchego_chains_aliases:
  {}
  ## Example:
  ##   q2aTwKuyzgs8pynF7UXBZCU7DejbZbZ6EUyHr3JQzYgwNPUPi:
  ##     - DFK

avalanchego_chains_configs:
  C:
    state-sync-enabled: true

# Chains upgrades
avalanchego_chains_upgrades:
  {}
  ## Example:
  ##   a-valid-chain-id:
  ##     precompileUpgrades:
  ##       - feeManagerConfig:
  ##           blockTimestamp: 1668950000
  ##           adminAddresses:
  ##             - "0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC"
  ##       - feeManagerConfig:
  ##           blockTimestamp: 1668970000
  ##           disable: true

# Validator configuration
## Private key used to sign the staking transaction
validator_txs_private_key: PrivateKey-ewoqjP7PxY4yr3iLTpLisriqt94hdyDFNgchSxGGztUrTXtNN
## Private key encoding (cb58 or hex)
validator_txs_key_encoding: cb58

## Validation parameters
validator_start_time_command: 'date -d "2 minutes" --rfc-3339=seconds | tr " " T' # in 2 minutes
validator_end_time_command: 'date -d "1 week 2 minutes" --rfc-3339=seconds | tr " " T' # in 1 week and 2 minutes
### Either a timestamp in RFC 3339 format or 'start_time_command_output' that will be resolved
validator_start_time: start_time_command_output
### Either a timestamp in RFC 3339 format or 'end_time_command_output' that will be resolved
validator_end_time: end_time_command_output
### Stake in AVAX for the Primary Network or weight for permissioned Subnets
validator_stake_or_weight: 1
### In percent. Only used for the Primary Network
validator_delegation_fee: 2

# Systemd
## Additional systemd avalanchego.service options
## Only modify this variable if you are absolutely sure about what you are doing
## Please refer to Ubuntu man pages for the usage of these options
## https://manpages.ubuntu.com/manpages/focal/en/man5/systemd.service.5.html
avalanchego_service_options: |
  # ExecStartPost=/bin/echo "Example ExecStartPost option"

# Ash CLI configuration
## Whether to install and configure Ash CLI on the node
ash_cli_install: true
## The avalanche network to be used in the Ash CLI (sets the RPC endpoints to use)
ash_cli_network_id: "{{ avalanchego_network_id }}"
