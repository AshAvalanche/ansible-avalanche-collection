# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) 2022-2024, E36 Knots
---
- name: Set avalanchego_vm_binary_arch according to ansible_architecture
  set_fact:
    avalanchego_vm_binary_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' if ansible_architecture == 'aarch64' else avalanchego_vm_binary_arch }}"

- name: "Check that {{ vm_name }}={{ vm_version }} is compatible with avalanchego={{ avalanchego_version }}"
  debug:
    msg: "AvalancheGo version {{ item.key }} {{ item.value }}: {{ avalanchego_version is version(item.value, item.key) }}"
  run_once: true
  loop: "{{ vm_info.versions_comp[vm_version] | dict2items }}"
  failed_when: not avalanchego_version is version(item.value, item.key)

- name: "Create {{ vm_name }} dir"
  file:
    path: "{{ avalanchego_vms_dir }}/{{ vm_name }}/releases"
    state: directory
    owner: "{{ avalanchego_user }}"
    group: "{{ avalanchego_group }}"

- name: "Download {{ vm_name }} {{ vm_version }} binary"
  get_url:
    url: "{{ vm_info.download_url }}/v{{ vm_version }}/{{ avalanchego_vm_binary_filename }}"
    dest: "{{ avalanchego_vms_dir }}/{{ vm_name }}/releases/{{ avalanchego_vm_binary_filename }}"
    checksum: "sha256:{{ vm_info.download_url }}/v{{ vm_version }}/{{ avalanchego_vm_checksum_filename }}"
    owner: "{{ avalanchego_user }}"
    group: "{{ avalanchego_group }}"

- name: "Create {{ vm_name }}-v{{ vm_version }} directory"
  file:
    path: "{{ avalanchego_vms_dir }}/{{ vm_name }}/{{ vm_name }}-v{{ vm_version }}"
    state: directory
    owner: "{{ avalanchego_user }}"
    group: "{{ avalanchego_group }}"

- name: "Unpack {{ vm_name }} binary"
  unarchive:
    src: "{{ avalanchego_vms_dir }}/{{ vm_name }}/releases/{{ avalanchego_vm_binary_filename }}"
    dest: "{{ avalanchego_vms_dir }}/{{ vm_name }}/{{ vm_name }}-v{{ vm_version }}"
    remote_src: true
    owner: "{{ avalanchego_user }}"
    group: "{{ avalanchego_group }}"
    creates: "{{ avalanchego_vms_dir }}/{{ vm_name}}/{{ vm_name }}-v{{ vm_version }}/{{ vm_info.binary_filename }}"

- name: "Create the symlink to {{ vm_name }} binary in plugins dir"
  file:
    src: "{{ avalanchego_vms_dir }}/{{ vm_name }}/{{ vm_name }}-v{{ vm_version }}/{{ vm_info.binary_filename }}"
    dest: "{{ avalanchego_plugins_dir }}/{{ vm_info.id }}"
    state: link
    owner: "{{ avalanchego_user }}"
    group: "{{ avalanchego_group }}"
  notify: New VM
