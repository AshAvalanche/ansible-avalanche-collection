# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) 2022-2023, E36 Knots
---
# Subnet configuration
subnet_avalanche_network_id: local
## Private key used to sign transactions
subnet_txs_private_key: PrivateKey-ewoqjP7PxY4yr3iLTpLisriqt94hdyDFNgchSxGGztUrTXtNN
## Private key encoding (cb58 or hex)
subnet_txs_key_encoding: cb58

# Blockchains configuration
## Whether to fail if a blockchain with the same name already exists
subnet_blockchains_check_name: true
## List of blockchains to create in the Subnet
subnet_blockchains_list:
  - name: AshSubnetEVM
    ## Name of the VM in the collection
    ## See https://ash.center/docs/toolkit/ansible-avalanche-collection/reference/roles/avalanche-node#supported-vms-and-avalanchego-compatibility
    vm: subnet-evm
    genesis_data:
      config:
        chainId: 66666
        homesteadBlock: 0
        eip150Block: 0
        eip150Hash: "0x2086799aeebeae135c246c65021c82b4e15a2c451340993aacfd2751886514f0"
        eip155Block: 0
        eip158Block: 0
        byzantiumBlock: 0
        constantinopleBlock: 0
        petersburgBlock: 0
        istanbulBlock: 0
        muirGlacierBlock: 0
        subnetEVMTimestamp: 0
        feeConfig:
          gasLimit: 8000000
          minBaseFee: 25000000000
          targetGas: 15000000
          baseFeeChangeDenominator: 36
          minBlockGasCost: 0
          maxBlockGasCost: 1000000
          targetBlockRate: 2
          blockGasCostStep: 200000
      alloc:
        8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC:
          balance: "0x295BE96E64066972000000"
      nonce: "0x0"
      timestamp: "0x0"
      extraData: "0x00"
      gasLimit: "0x7A1200"
      difficulty: "0x0"
      mixHash: "0x0000000000000000000000000000000000000000000000000000000000000000"
      coinbase: "0x0000000000000000000000000000000000000000"
      number: "0x0"
      gasUsed: "0x0"
      parentHash: "0x0000000000000000000000000000000000000000000000000000000000000000"

# Validators configuration
## Whether to add validator nodes to the Subnet
## The nodes are looked up in the `subnet_validators_ids_list` variable
subnet_validators_add: true
## Validation params for each validator to add to the Subnet (see below)
subnet_validators_params:
  []
  ## Example:
  ##   - node_id: NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg
  ##     start_time: "{{ subnet_validator_start_time }}"
  ##     end_time: "{{ subnet_validator_end_time }}"
  ##     stake_or_weight: 100
  ##     delegation_fee: 2

## Default validation parameters
subnet_validator_start_time_command: 'date -d "2 minutes" --rfc-3339=seconds | tr " " T' # in 2 minutes
subnet_validator_end_time_command: 'date -d "1 week 2 minutes" --rfc-3339=seconds | tr " " T' # in 1 week and 2 minutes
### Either a timestamp in RFC 3339 format or 'start_time_command_output' that will be resolved
subnet_validator_start_time: start_time_command_output
### Either a timestamp in RFC 3339 format or 'end_time_command_output' that will be resolved
subnet_validator_end_time: end_time_command_output
### Stake in AVAX for the Primary Network or weight for permissioned Subnets
subnet_validator_stake_or_weight: 100
### In percent. Only used for the Primary Network
subnet_validator_delegation_fee: 2
